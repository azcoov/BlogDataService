#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MetaWeblogService.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="blog")]
	public partial class BlogDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBlogFeed(BlogFeed instance);
    partial void UpdateBlogFeed(BlogFeed instance);
    partial void DeleteBlogFeed(BlogFeed instance);
    partial void InsertBlogEntry(BlogEntry instance);
    partial void UpdateBlogEntry(BlogEntry instance);
    partial void DeleteBlogEntry(BlogEntry instance);
    partial void InsertBlogEntryCategory(BlogEntryCategory instance);
    partial void UpdateBlogEntryCategory(BlogEntryCategory instance);
    partial void DeleteBlogEntryCategory(BlogEntryCategory instance);
    partial void InsertBlogCategory(BlogCategory instance);
    partial void UpdateBlogCategory(BlogCategory instance);
    partial void DeleteBlogCategory(BlogCategory instance);
    partial void InsertBlogEntryComment(BlogEntryComment instance);
    partial void UpdateBlogEntryComment(BlogEntryComment instance);
    partial void DeleteBlogEntryComment(BlogEntryComment instance);
    partial void InsertBlogUser(BlogUser instance);
    partial void UpdateBlogUser(BlogUser instance);
    partial void DeleteBlogUser(BlogUser instance);
    partial void InsertBlogFeedUser(BlogFeedUser instance);
    partial void UpdateBlogFeedUser(BlogFeedUser instance);
    partial void DeleteBlogFeedUser(BlogFeedUser instance);
    #endregion
		
		public BlogDataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BlogDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlogDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlogDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlogDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BlogFeed> BlogFeeds
		{
			get
			{
				return this.GetTable<BlogFeed>();
			}
		}
		
		public System.Data.Linq.Table<BlogEntry> BlogEntries
		{
			get
			{
				return this.GetTable<BlogEntry>();
			}
		}
		
		public System.Data.Linq.Table<BlogEntryCategory> BlogEntryCategories
		{
			get
			{
				return this.GetTable<BlogEntryCategory>();
			}
		}
		
		public System.Data.Linq.Table<BlogCategory> BlogCategories
		{
			get
			{
				return this.GetTable<BlogCategory>();
			}
		}
		
		public System.Data.Linq.Table<BlogEntryComment> BlogEntryComments
		{
			get
			{
				return this.GetTable<BlogEntryComment>();
			}
		}
		
		public System.Data.Linq.Table<BlogUser> BlogUsers
		{
			get
			{
				return this.GetTable<BlogUser>();
			}
		}
		
		public System.Data.Linq.Table<BlogFeedUser> BlogFeedUsers
		{
			get
			{
				return this.GetTable<BlogFeedUser>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ctweb.BlogFeed")]
	public partial class BlogFeed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BlogFeed_ID;
		
		private string _Title;
		
		private string _SubTitle;
		
		private string _URL;
		
		private string _Author;
		
		private EntitySet<BlogEntry> _BlogEntries;
		
		private EntitySet<BlogFeedUser> _BlogFeedUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlogFeed_IDChanging(int value);
    partial void OnBlogFeed_IDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSubTitleChanging(string value);
    partial void OnSubTitleChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    #endregion
		
		public BlogFeed()
		{
			this._BlogEntries = new EntitySet<BlogEntry>(new Action<BlogEntry>(this.attach_BlogEntries), new Action<BlogEntry>(this.detach_BlogEntries));
			this._BlogFeedUsers = new EntitySet<BlogFeedUser>(new Action<BlogFeedUser>(this.attach_BlogFeedUsers), new Action<BlogFeedUser>(this.detach_BlogFeedUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogFeed_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BlogFeed_ID
		{
			get
			{
				return this._BlogFeed_ID;
			}
			set
			{
				if ((this._BlogFeed_ID != value))
				{
					this.OnBlogFeed_IDChanging(value);
					this.SendPropertyChanging();
					this._BlogFeed_ID = value;
					this.SendPropertyChanged("BlogFeed_ID");
					this.OnBlogFeed_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubTitle", DbType="VarChar(200)")]
		public string SubTitle
		{
			get
			{
				return this._SubTitle;
			}
			set
			{
				if ((this._SubTitle != value))
				{
					this.OnSubTitleChanging(value);
					this.SendPropertyChanging();
					this._SubTitle = value;
					this.SendPropertyChanged("SubTitle");
					this.OnSubTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(100)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="VarChar(75)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogFeed_BlogEntry", Storage="_BlogEntries", ThisKey="BlogFeed_ID", OtherKey="BlogFeed_ID")]
		public EntitySet<BlogEntry> BlogEntries
		{
			get
			{
				return this._BlogEntries;
			}
			set
			{
				this._BlogEntries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogFeed_BlogFeedUser", Storage="_BlogFeedUsers", ThisKey="BlogFeed_ID", OtherKey="BlogFeed_ID")]
		public EntitySet<BlogFeedUser> BlogFeedUsers
		{
			get
			{
				return this._BlogFeedUsers;
			}
			set
			{
				this._BlogFeedUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BlogEntries(BlogEntry entity)
		{
			this.SendPropertyChanging();
			entity.BlogFeed = this;
		}
		
		private void detach_BlogEntries(BlogEntry entity)
		{
			this.SendPropertyChanging();
			entity.BlogFeed = null;
		}
		
		private void attach_BlogFeedUsers(BlogFeedUser entity)
		{
			this.SendPropertyChanging();
			entity.BlogFeed = this;
		}
		
		private void detach_BlogFeedUsers(BlogFeedUser entity)
		{
			this.SendPropertyChanging();
			entity.BlogFeed = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ctweb.BlogEntry")]
	public partial class BlogEntry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BlogEntry_ID;
		
		private string _Title;
		
		private System.DateTime _Published;
		
		private System.Nullable<System.DateTime> _Updated;
		
		private string _PostId;
		
		private string _URL;
		
		private string _Author;
		
		private string _Content;
		
		private int _BlogFeed_ID;
		
		private string _Tags;
		
		private EntitySet<BlogEntryCategory> _BlogEntryCategories;
		
		private EntitySet<BlogEntryComment> _BlogEntryComments;
		
		private EntityRef<BlogFeed> _BlogFeed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlogEntry_IDChanging(int value);
    partial void OnBlogEntry_IDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPublishedChanging(System.DateTime value);
    partial void OnPublishedChanged();
    partial void OnUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedChanged();
    partial void OnPostIdChanging(string value);
    partial void OnPostIdChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnBlogFeed_IDChanging(int value);
    partial void OnBlogFeed_IDChanged();
    partial void OnTagsChanging(string value);
    partial void OnTagsChanged();
    #endregion
		
		public BlogEntry()
		{
			this._BlogEntryCategories = new EntitySet<BlogEntryCategory>(new Action<BlogEntryCategory>(this.attach_BlogEntryCategories), new Action<BlogEntryCategory>(this.detach_BlogEntryCategories));
			this._BlogEntryComments = new EntitySet<BlogEntryComment>(new Action<BlogEntryComment>(this.attach_BlogEntryComments), new Action<BlogEntryComment>(this.detach_BlogEntryComments));
			this._BlogFeed = default(EntityRef<BlogFeed>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogEntry_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BlogEntry_ID
		{
			get
			{
				return this._BlogEntry_ID;
			}
			set
			{
				if ((this._BlogEntry_ID != value))
				{
					this.OnBlogEntry_IDChanging(value);
					this.SendPropertyChanging();
					this._BlogEntry_ID = value;
					this.SendPropertyChanged("BlogEntry_ID");
					this.OnBlogEntry_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Published", DbType="DateTime NOT NULL")]
		public System.DateTime Published
		{
			get
			{
				return this._Published;
			}
			set
			{
				if ((this._Published != value))
				{
					this.OnPublishedChanging(value);
					this.SendPropertyChanging();
					this._Published = value;
					this.SendPropertyChanged("Published");
					this.OnPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updated
		{
			get
			{
				return this._Updated;
			}
			set
			{
				if ((this._Updated != value))
				{
					this.OnUpdatedChanging(value);
					this.SendPropertyChanging();
					this._Updated = value;
					this.SendPropertyChanged("Updated");
					this.OnUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostId", DbType="VarChar(100)")]
		public string PostId
		{
			get
			{
				return this._PostId;
			}
			set
			{
				if ((this._PostId != value))
				{
					this.OnPostIdChanging(value);
					this.SendPropertyChanging();
					this._PostId = value;
					this.SendPropertyChanged("PostId");
					this.OnPostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(200)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="VarChar(100)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogFeed_ID", DbType="Int NOT NULL")]
		public int BlogFeed_ID
		{
			get
			{
				return this._BlogFeed_ID;
			}
			set
			{
				if ((this._BlogFeed_ID != value))
				{
					if (this._BlogFeed.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlogFeed_IDChanging(value);
					this.SendPropertyChanging();
					this._BlogFeed_ID = value;
					this.SendPropertyChanged("BlogFeed_ID");
					this.OnBlogFeed_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tags", DbType="VarChar(200)")]
		public string Tags
		{
			get
			{
				return this._Tags;
			}
			set
			{
				if ((this._Tags != value))
				{
					this.OnTagsChanging(value);
					this.SendPropertyChanging();
					this._Tags = value;
					this.SendPropertyChanged("Tags");
					this.OnTagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogEntry_BlogEntryCategory", Storage="_BlogEntryCategories", ThisKey="BlogEntry_ID", OtherKey="BlogEntry_ID")]
		public EntitySet<BlogEntryCategory> BlogEntryCategories
		{
			get
			{
				return this._BlogEntryCategories;
			}
			set
			{
				this._BlogEntryCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogEntry_BlogEntryComment", Storage="_BlogEntryComments", ThisKey="BlogEntry_ID", OtherKey="BlogEntry_ID")]
		public EntitySet<BlogEntryComment> BlogEntryComments
		{
			get
			{
				return this._BlogEntryComments;
			}
			set
			{
				this._BlogEntryComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogFeed_BlogEntry", Storage="_BlogFeed", ThisKey="BlogFeed_ID", OtherKey="BlogFeed_ID", IsForeignKey=true)]
		public BlogFeed BlogFeed
		{
			get
			{
				return this._BlogFeed.Entity;
			}
			set
			{
				BlogFeed previousValue = this._BlogFeed.Entity;
				if (((previousValue != value) 
							|| (this._BlogFeed.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlogFeed.Entity = null;
						previousValue.BlogEntries.Remove(this);
					}
					this._BlogFeed.Entity = value;
					if ((value != null))
					{
						value.BlogEntries.Add(this);
						this._BlogFeed_ID = value.BlogFeed_ID;
					}
					else
					{
						this._BlogFeed_ID = default(int);
					}
					this.SendPropertyChanged("BlogFeed");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BlogEntryCategories(BlogEntryCategory entity)
		{
			this.SendPropertyChanging();
			entity.BlogEntry = this;
		}
		
		private void detach_BlogEntryCategories(BlogEntryCategory entity)
		{
			this.SendPropertyChanging();
			entity.BlogEntry = null;
		}
		
		private void attach_BlogEntryComments(BlogEntryComment entity)
		{
			this.SendPropertyChanging();
			entity.BlogEntry = this;
		}
		
		private void detach_BlogEntryComments(BlogEntryComment entity)
		{
			this.SendPropertyChanging();
			entity.BlogEntry = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ctweb.BlogEntryCategory")]
	public partial class BlogEntryCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BlogEntryCategory_ID;
		
		private int _BlogEntry_ID;
		
		private int _BlogCategory_ID;
		
		private EntityRef<BlogEntry> _BlogEntry;
		
		private EntityRef<BlogCategory> _BlogCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlogEntryCategory_IDChanging(int value);
    partial void OnBlogEntryCategory_IDChanged();
    partial void OnBlogEntry_IDChanging(int value);
    partial void OnBlogEntry_IDChanged();
    partial void OnBlogCategory_IDChanging(int value);
    partial void OnBlogCategory_IDChanged();
    #endregion
		
		public BlogEntryCategory()
		{
			this._BlogEntry = default(EntityRef<BlogEntry>);
			this._BlogCategory = default(EntityRef<BlogCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogEntryCategory_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BlogEntryCategory_ID
		{
			get
			{
				return this._BlogEntryCategory_ID;
			}
			set
			{
				if ((this._BlogEntryCategory_ID != value))
				{
					this.OnBlogEntryCategory_IDChanging(value);
					this.SendPropertyChanging();
					this._BlogEntryCategory_ID = value;
					this.SendPropertyChanged("BlogEntryCategory_ID");
					this.OnBlogEntryCategory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogEntry_ID", DbType="Int NOT NULL")]
		public int BlogEntry_ID
		{
			get
			{
				return this._BlogEntry_ID;
			}
			set
			{
				if ((this._BlogEntry_ID != value))
				{
					if (this._BlogEntry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlogEntry_IDChanging(value);
					this.SendPropertyChanging();
					this._BlogEntry_ID = value;
					this.SendPropertyChanged("BlogEntry_ID");
					this.OnBlogEntry_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogCategory_ID", DbType="Int NOT NULL")]
		public int BlogCategory_ID
		{
			get
			{
				return this._BlogCategory_ID;
			}
			set
			{
				if ((this._BlogCategory_ID != value))
				{
					if (this._BlogCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlogCategory_IDChanging(value);
					this.SendPropertyChanging();
					this._BlogCategory_ID = value;
					this.SendPropertyChanged("BlogCategory_ID");
					this.OnBlogCategory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogEntry_BlogEntryCategory", Storage="_BlogEntry", ThisKey="BlogEntry_ID", OtherKey="BlogEntry_ID", IsForeignKey=true)]
		public BlogEntry BlogEntry
		{
			get
			{
				return this._BlogEntry.Entity;
			}
			set
			{
				BlogEntry previousValue = this._BlogEntry.Entity;
				if (((previousValue != value) 
							|| (this._BlogEntry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlogEntry.Entity = null;
						previousValue.BlogEntryCategories.Remove(this);
					}
					this._BlogEntry.Entity = value;
					if ((value != null))
					{
						value.BlogEntryCategories.Add(this);
						this._BlogEntry_ID = value.BlogEntry_ID;
					}
					else
					{
						this._BlogEntry_ID = default(int);
					}
					this.SendPropertyChanged("BlogEntry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogCategory_BlogEntryCategory", Storage="_BlogCategory", ThisKey="BlogCategory_ID", OtherKey="BlogCategory_ID", IsForeignKey=true)]
		public BlogCategory BlogCategory
		{
			get
			{
				return this._BlogCategory.Entity;
			}
			set
			{
				BlogCategory previousValue = this._BlogCategory.Entity;
				if (((previousValue != value) 
							|| (this._BlogCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlogCategory.Entity = null;
						previousValue.BlogEntryCategories.Remove(this);
					}
					this._BlogCategory.Entity = value;
					if ((value != null))
					{
						value.BlogEntryCategories.Add(this);
						this._BlogCategory_ID = value.BlogCategory_ID;
					}
					else
					{
						this._BlogCategory_ID = default(int);
					}
					this.SendPropertyChanged("BlogCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ctweb.BlogCategory")]
	public partial class BlogCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BlogCategory_ID;
		
		private string _Category;
		
		private EntitySet<BlogEntryCategory> _BlogEntryCategories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlogCategory_IDChanging(int value);
    partial void OnBlogCategory_IDChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    #endregion
		
		public BlogCategory()
		{
			this._BlogEntryCategories = new EntitySet<BlogEntryCategory>(new Action<BlogEntryCategory>(this.attach_BlogEntryCategories), new Action<BlogEntryCategory>(this.detach_BlogEntryCategories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogCategory_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BlogCategory_ID
		{
			get
			{
				return this._BlogCategory_ID;
			}
			set
			{
				if ((this._BlogCategory_ID != value))
				{
					this.OnBlogCategory_IDChanging(value);
					this.SendPropertyChanging();
					this._BlogCategory_ID = value;
					this.SendPropertyChanged("BlogCategory_ID");
					this.OnBlogCategory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogCategory_BlogEntryCategory", Storage="_BlogEntryCategories", ThisKey="BlogCategory_ID", OtherKey="BlogCategory_ID")]
		public EntitySet<BlogEntryCategory> BlogEntryCategories
		{
			get
			{
				return this._BlogEntryCategories;
			}
			set
			{
				this._BlogEntryCategories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BlogEntryCategories(BlogEntryCategory entity)
		{
			this.SendPropertyChanging();
			entity.BlogCategory = this;
		}
		
		private void detach_BlogEntryCategories(BlogEntryCategory entity)
		{
			this.SendPropertyChanging();
			entity.BlogCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ctweb.BlogEntryComment")]
	public partial class BlogEntryComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BlogEntryComment_ID;
		
		private int _BlogEntry_ID;
		
		private System.DateTime _Posted;
		
		private string _PostedBy;
		
		private string _Comment;
		
		private string _HomePage;
		
		private string _Email;
		
		private EntityRef<BlogEntry> _BlogEntry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlogEntryComment_IDChanging(int value);
    partial void OnBlogEntryComment_IDChanged();
    partial void OnBlogEntry_IDChanging(int value);
    partial void OnBlogEntry_IDChanged();
    partial void OnPostedChanging(System.DateTime value);
    partial void OnPostedChanged();
    partial void OnPostedByChanging(string value);
    partial void OnPostedByChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnHomePageChanging(string value);
    partial void OnHomePageChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public BlogEntryComment()
		{
			this._BlogEntry = default(EntityRef<BlogEntry>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogEntryComment_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BlogEntryComment_ID
		{
			get
			{
				return this._BlogEntryComment_ID;
			}
			set
			{
				if ((this._BlogEntryComment_ID != value))
				{
					this.OnBlogEntryComment_IDChanging(value);
					this.SendPropertyChanging();
					this._BlogEntryComment_ID = value;
					this.SendPropertyChanged("BlogEntryComment_ID");
					this.OnBlogEntryComment_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogEntry_ID", DbType="Int NOT NULL")]
		public int BlogEntry_ID
		{
			get
			{
				return this._BlogEntry_ID;
			}
			set
			{
				if ((this._BlogEntry_ID != value))
				{
					if (this._BlogEntry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlogEntry_IDChanging(value);
					this.SendPropertyChanging();
					this._BlogEntry_ID = value;
					this.SendPropertyChanged("BlogEntry_ID");
					this.OnBlogEntry_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Posted", DbType="DateTime NOT NULL")]
		public System.DateTime Posted
		{
			get
			{
				return this._Posted;
			}
			set
			{
				if ((this._Posted != value))
				{
					this.OnPostedChanging(value);
					this.SendPropertyChanging();
					this._Posted = value;
					this.SendPropertyChanged("Posted");
					this.OnPostedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostedBy", DbType="VarChar(50)")]
		public string PostedBy
		{
			get
			{
				return this._PostedBy;
			}
			set
			{
				if ((this._PostedBy != value))
				{
					this.OnPostedByChanging(value);
					this.SendPropertyChanging();
					this._PostedBy = value;
					this.SendPropertyChanged("PostedBy");
					this.OnPostedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePage", DbType="VarChar(150)")]
		public string HomePage
		{
			get
			{
				return this._HomePage;
			}
			set
			{
				if ((this._HomePage != value))
				{
					this.OnHomePageChanging(value);
					this.SendPropertyChanging();
					this._HomePage = value;
					this.SendPropertyChanged("HomePage");
					this.OnHomePageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(150)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogEntry_BlogEntryComment", Storage="_BlogEntry", ThisKey="BlogEntry_ID", OtherKey="BlogEntry_ID", IsForeignKey=true)]
		public BlogEntry BlogEntry
		{
			get
			{
				return this._BlogEntry.Entity;
			}
			set
			{
				BlogEntry previousValue = this._BlogEntry.Entity;
				if (((previousValue != value) 
							|| (this._BlogEntry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlogEntry.Entity = null;
						previousValue.BlogEntryComments.Remove(this);
					}
					this._BlogEntry.Entity = value;
					if ((value != null))
					{
						value.BlogEntryComments.Add(this);
						this._BlogEntry_ID = value.BlogEntry_ID;
					}
					else
					{
						this._BlogEntry_ID = default(int);
					}
					this.SendPropertyChanged("BlogEntry");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ctweb.BlogUser")]
	public partial class BlogUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BlogUser_ID;
		
		private string _UserName;
		
		private string _Password;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _NickName;
		
		private string _Email;
		
		private string _Url;
		
		private EntitySet<BlogFeedUser> _BlogFeedUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlogUser_IDChanging(int value);
    partial void OnBlogUser_IDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnNickNameChanging(string value);
    partial void OnNickNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public BlogUser()
		{
			this._BlogFeedUsers = new EntitySet<BlogFeedUser>(new Action<BlogFeedUser>(this.attach_BlogFeedUsers), new Action<BlogFeedUser>(this.detach_BlogFeedUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogUser_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BlogUser_ID
		{
			get
			{
				return this._BlogUser_ID;
			}
			set
			{
				if ((this._BlogUser_ID != value))
				{
					this.OnBlogUser_IDChanging(value);
					this.SendPropertyChanging();
					this._BlogUser_ID = value;
					this.SendPropertyChanged("BlogUser_ID");
					this.OnBlogUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(75)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NickName", DbType="VarChar(25)")]
		public string NickName
		{
			get
			{
				return this._NickName;
			}
			set
			{
				if ((this._NickName != value))
				{
					this.OnNickNameChanging(value);
					this.SendPropertyChanging();
					this._NickName = value;
					this.SendPropertyChanged("NickName");
					this.OnNickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(320)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(2048)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogUser_BlogFeedUser", Storage="_BlogFeedUsers", ThisKey="BlogUser_ID", OtherKey="BlogUser_ID")]
		public EntitySet<BlogFeedUser> BlogFeedUsers
		{
			get
			{
				return this._BlogFeedUsers;
			}
			set
			{
				this._BlogFeedUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BlogFeedUsers(BlogFeedUser entity)
		{
			this.SendPropertyChanging();
			entity.BlogUser = this;
		}
		
		private void detach_BlogFeedUsers(BlogFeedUser entity)
		{
			this.SendPropertyChanging();
			entity.BlogUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ctweb.BlogFeedUser")]
	public partial class BlogFeedUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BlogFeedUser_ID;
		
		private int _BlogFeed_ID;
		
		private int _BlogUser_ID;
		
		private EntityRef<BlogFeed> _BlogFeed;
		
		private EntityRef<BlogUser> _BlogUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlogFeedUser_IDChanging(int value);
    partial void OnBlogFeedUser_IDChanged();
    partial void OnBlogFeed_IDChanging(int value);
    partial void OnBlogFeed_IDChanged();
    partial void OnBlogUser_IDChanging(int value);
    partial void OnBlogUser_IDChanged();
    #endregion
		
		public BlogFeedUser()
		{
			this._BlogFeed = default(EntityRef<BlogFeed>);
			this._BlogUser = default(EntityRef<BlogUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogFeedUser_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BlogFeedUser_ID
		{
			get
			{
				return this._BlogFeedUser_ID;
			}
			set
			{
				if ((this._BlogFeedUser_ID != value))
				{
					this.OnBlogFeedUser_IDChanging(value);
					this.SendPropertyChanging();
					this._BlogFeedUser_ID = value;
					this.SendPropertyChanged("BlogFeedUser_ID");
					this.OnBlogFeedUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogFeed_ID", DbType="Int NOT NULL")]
		public int BlogFeed_ID
		{
			get
			{
				return this._BlogFeed_ID;
			}
			set
			{
				if ((this._BlogFeed_ID != value))
				{
					if (this._BlogFeed.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlogFeed_IDChanging(value);
					this.SendPropertyChanging();
					this._BlogFeed_ID = value;
					this.SendPropertyChanged("BlogFeed_ID");
					this.OnBlogFeed_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogUser_ID", DbType="Int NOT NULL")]
		public int BlogUser_ID
		{
			get
			{
				return this._BlogUser_ID;
			}
			set
			{
				if ((this._BlogUser_ID != value))
				{
					if (this._BlogUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlogUser_IDChanging(value);
					this.SendPropertyChanging();
					this._BlogUser_ID = value;
					this.SendPropertyChanged("BlogUser_ID");
					this.OnBlogUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogFeed_BlogFeedUser", Storage="_BlogFeed", ThisKey="BlogFeed_ID", OtherKey="BlogFeed_ID", IsForeignKey=true)]
		public BlogFeed BlogFeed
		{
			get
			{
				return this._BlogFeed.Entity;
			}
			set
			{
				BlogFeed previousValue = this._BlogFeed.Entity;
				if (((previousValue != value) 
							|| (this._BlogFeed.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlogFeed.Entity = null;
						previousValue.BlogFeedUsers.Remove(this);
					}
					this._BlogFeed.Entity = value;
					if ((value != null))
					{
						value.BlogFeedUsers.Add(this);
						this._BlogFeed_ID = value.BlogFeed_ID;
					}
					else
					{
						this._BlogFeed_ID = default(int);
					}
					this.SendPropertyChanged("BlogFeed");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogUser_BlogFeedUser", Storage="_BlogUser", ThisKey="BlogUser_ID", OtherKey="BlogUser_ID", IsForeignKey=true)]
		public BlogUser BlogUser
		{
			get
			{
				return this._BlogUser.Entity;
			}
			set
			{
				BlogUser previousValue = this._BlogUser.Entity;
				if (((previousValue != value) 
							|| (this._BlogUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlogUser.Entity = null;
						previousValue.BlogFeedUsers.Remove(this);
					}
					this._BlogUser.Entity = value;
					if ((value != null))
					{
						value.BlogFeedUsers.Add(this);
						this._BlogUser_ID = value.BlogUser_ID;
					}
					else
					{
						this._BlogUser_ID = default(int);
					}
					this.SendPropertyChanged("BlogUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
